plugins {
	id 'org.quiltmc.loom' version '0.12.+'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://www.cursemaven.com" }
	maven { url = "https://maven.terraformersmc.com/releases" }
	maven { url = "https://hephaestus.dev/release" }
	maven { url "https://api.modrinth.com/maven" }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}

	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:$project.minecraft_version"
	mappings(loom.layered {
		addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${mappings_version}:v2"))
	})

	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${project.quilted_version}-${minecraft_version}"

	modImplementation ("com.terraformersmc:modmenu:${project.mod_menu_version}"){
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "net.fabricmc"
	}


	//Gravity Changer - UPDATE TO NEWEST VERSION WHEN ITS RELEASED ON MODRINTH
	modImplementation include ("maven.modrinth:fusions-gravity-api:${project.fusions_gravity_api_version}"){
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "net.fabricmc"
		exclude group: "dev.onyxstudios.cardinal-components-api"
	}

	//include ('com.github.Fusion-Flux:GravityChanger:v0.7.6')

	modApi include("maven.modrinth:stonecutter_recipe_tags:3.0.1")
//

	// Replace modImplementation with modApi if you expose components in your own API
	modImplementation include ("dev.onyxstudios.cardinal-components-api:cardinal-components-base:4.1.4") {
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "net.fabricmc"
	}

	// Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
	//include "dev.onyxstudios.cardinal-components-api:cardinal-components-base:4.1.4"

	modImplementation include ("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:4.1.4") {
		exclude group: "net.fabricmc.fabric-api"
		exclude group: "net.fabricmc"
	}
	// Includes Cardinal Components API as a Jar-in-Jar dependency (optional but recommended)
	//include "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:4.1.4"

	implementation("com.github.LlamaLad7:MixinExtras:0.0.10")
	include("com.github.LlamaLad7:MixinExtras:0.0.10")
	annotationProcessor("com.github.LlamaLad7:MixinExtras:0.0.10")


}

processResources {
	inputs.property "version", project.version

	filesMatching("quilt.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

// configure the maven publication
/*publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}*/